<Activity mc:Ignorable="sap sap2010" x:Class="test_Get_Facet_EventInfo" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="940,2054.4" sap2010:WorkflowViewState.IdRef="test_Get_Facet_EventInfo_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="test_Get_Facet_EventInfo" sap:VirtualizedContainerService.HintSize="467.2,1889.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="425.6,1796.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <Sequence.Variables>
        <Variable x:TypeArguments="njl:JObject" Name="jObjectResponseItaly" />
        <Variable x:TypeArguments="x:String" Name="jsonRequest" />
        <Variable x:TypeArguments="x:Int32" Name="StatusCodeItaly" />
        <Variable x:TypeArguments="x:String" Name="jsonResult" />
        <Variable x:TypeArguments="x:Int32" Name="statusCode" />
        <Variable x:TypeArguments="njl:JObject" Name="jObjectResponse" />
        <Variable x:TypeArguments="x:String" Name="Time" />
        <Variable x:TypeArguments="x:String" Name="jsonResultItaly" />
        <Variable x:TypeArguments="x:String" Name="id" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictionary_ITFeventInfo" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign - ID" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_32">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[id]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">32791403</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_33">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictionary_ITFeventInfo]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String,String)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ReadTextFile Content="[jsonRequest]" DisplayName="Read Text File" FileName="Data_Layer\ITF_EventInfo.json" sap:VirtualizedContainerService.HintSize="384,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
      <Assign DisplayName="Replace competition ID in request" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[jsonRequest]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[jsonRequest.replace("ciocolata", id)]</InArgument>
        </Assign.Value>
      </Assign>
      <TryCatch sap2010:Annotation.AnnotationText="Get all Today's events form Exchange GB" DisplayName="Try Catch - GB" sap:VirtualizedContainerService.HintSize="384,96.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="333.6,263.2" sap2010:WorkflowViewState.IdRef="RetryScope_1">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" Body="[jsonRequest]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request to SCAN FACET GBI" EndPoint="http://scan-prdinbf.prd.internal/www/sports/navigation/facet/v1/search?alt=json" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[jsonResult]" StatusCode="[statusCode]" TimeoutMS="30000">
                  <ui:HttpClient.Attachments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Attachments>
                  <ui:HttpClient.Cookies>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Cookies>
                  <ui:HttpClient.Headers>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Headers>
                  <ui:HttpClient.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Parameters>
                  <ui:HttpClient.UrlSegments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.UrlSegments>
                </ui:HttpClient>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean">
                <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[statusCode = 200]" />
              </ActivityFunc>
            </ui:RetryScope.Condition>
          </ui:RetryScope>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="752.8,372.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[exception.Message.Contains(&quot;Action failed to execute as expected.&quot;)]" DisplayName="If inner exc != nothing" sap:VirtualizedContainerService.HintSize="711.2,252" sap2010:WorkflowViewState.IdRef="If_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Status code: &quot;+statusCode.ToString+Environment.NewLine+&#xA;&quot;JSON response is: &quot;]" />
                  </If.Then>
                  <If.Else>
                    <ui:LogMessage DisplayName="Log Message - inner  error" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;The exception of Betradar HTTP req is: &quot;+exception.Message]" />
                  </If.Else>
                </If>
                <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" Body="[jsonRequest]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request to XTT FACET GBI" EndPoint="http://xtt.prd.internal/tunnel_facet_builder/betfair.com/scan-prdbfg.prd.internal/www/sports/navigation/facet/v1/search?alt=json" sap:VirtualizedContainerService.HintSize="711.2,22.4" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="POST" Result="[jsonResult]" StatusCode="[statusCode]" TimeoutMS="30000">
                  <ui:HttpClient.Attachments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Attachments>
                  <ui:HttpClient.Cookies>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Cookies>
                  <ui:HttpClient.Headers>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Headers>
                  <ui:HttpClient.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Parameters>
                  <ui:HttpClient.UrlSegments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.UrlSegments>
                </ui:HttpClient>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <TryCatch sap2010:Annotation.AnnotationText="Get all Today's events form Exchange IT" DisplayName="Try Catch - IT" sap:VirtualizedContainerService.HintSize="384,96.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="333.6,343.2" sap2010:WorkflowViewState.IdRef="RetryScope_2">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" Body="[jsonRequest]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request to FACET IT" EndPoint="http://xtt.prd.internal/tunnel_facet_builder/betfair.it/scan-prdbfg.prd.internal/www/sports/navigation/facet/v1/search?alt=json" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="POST" Result="[jsonResultItaly]" StatusCode="[StatusCodeItaly]" TimeoutMS="30000">
                  <ui:HttpClient.Attachments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Attachments>
                  <ui:HttpClient.Cookies>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Cookies>
                  <ui:HttpClient.Headers>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Headers>
                  <ui:HttpClient.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Parameters>
                  <ui:HttpClient.UrlSegments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.UrlSegments>
                </ui:HttpClient>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean">
                <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="IsTrue_2" Input="[StatusCodeItaly = 200]" />
              </ActivityFunc>
            </ui:RetryScope.Condition>
          </ui:RetryScope>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="717.6,322.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <If Condition="[exception.Message.Contains(&quot;Action failed to execute as expected.&quot;)]" DisplayName="If inner exc != nothing" sap:VirtualizedContainerService.HintSize="711.2,252" sap2010:WorkflowViewState.IdRef="If_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;Status code: &quot;+statusCode.ToString+Environment.NewLine+&#xA;&quot;JSON response is: &quot;+jsonResult]" />
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log Message - inner  error" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;The exception of Betradar HTTP req is: &quot;+exception.Message]" />
                </If.Else>
              </If>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <If Condition="[statusCode &lt;&gt; 200]" DisplayName="If status code not 200 GBI" sap:VirtualizedContainerService.HintSize="384,52.8" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Some error occured for the API CALL, GBI: &quot;+ statusCode.ToString]" />
        </If.Then>
      </If>
      <If Condition="[StatusCodeItaly &lt;&gt; 200]" DisplayName="If status code not 200 ITALY" sap:VirtualizedContainerService.HintSize="384,52.8" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Some error occured for the API CALL, ITALY: &quot;+ StatusCodeItaly.ToString +Environment.NewLine+ jsonResultItaly]" />
        </If.Then>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="384,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Warn" Message="[jsonResult]" />
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[jObjectResponse]" JsonString="[jsonResult]" />
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON ITALY" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[jObjectResponseItaly]" JsonString="[jsonResultItaly]" />
      <If Condition="[jsonResult.Length &lt;= &quot;{\'facets\':[],\'results\':[],\'attachments\':{}}&quot;.Length]" DisplayName="If there are no matches loaded" sap:VirtualizedContainerService.HintSize="384,52.8" sap2010:WorkflowViewState.IdRef="If_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="241.6,238.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_1" />
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_2">
              <ui:CommentOut.Body>
                <Sequence sap:VirtualizedContainerService.HintSize="283.2,208" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Throw DisplayName="Throw - no events on EXC" Exception="[New BusinessRuleException(&quot;no events on EXCH&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                  </Sequence>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
          </Sequence>
        </If.Then>
      </If>
      <Sequence DisplayName="Building a dictionary with event's marketIds" sap:VirtualizedContainerService.HintSize="241.6,829.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Build dictionary for Event Name" DisplayName="For Each attachments exchange market - EVENT NAME" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[jObjectResponse(&quot;attachments&quot;)(&quot;events&quot;).Children()]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="njl:JToken">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="njl:JToken" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,445.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:DateTime" Name="marketTimeV" />
                  <Variable x:TypeArguments="x:String" Name="runnersTest" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[not item.First(&quot;eventId&quot;).ToString.tolower.Equals(id)]" DisplayName="If not match betting" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_2" />
                  </If.Then>
                </If>
                <Assign DisplayName="Assign Event Name" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("EventName")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("name").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign EventID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("EventId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("eventId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Event Schedule" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Event_Schedule")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.First("openDate").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Build dictionary for Match Odds" DisplayName="For Each attachments exchange market - MATCH ODDS" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[jObjectResponse(&quot;attachments&quot;)(&quot;markets&quot;).Children()]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="njl:JToken">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="njl:JToken" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,845.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:DateTime" Name="marketTimeV" />
                  <Variable x:TypeArguments="x:String" Name="runnersTest" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[not item.First(&quot;marketName&quot;).ToString.tolower.Equals(&quot;match odds&quot;)]" DisplayName="If not match betting" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_3" />
                  </If.Then>
                </If>
                <Assign DisplayName="Assign inplay" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MatchOdds_inPlay")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("inplay").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Market ID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MatchOdds_MarketId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.First("marketId").ToString.Split("."c)(1)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign MatchOdds_HomeRunnerName" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MatchOdds_HomeRunnerName")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(0)("runnerName").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign MatchOdds_HomeRunnerSelectionID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MatchOdds_HomeRunnerSelectionID")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(0)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign MatchOdds_AwayRunnerName" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MatchOdds_AwayRunnerName")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(1)("runnerName").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign MatchOdds_AwayRunnerSelectionID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MatchOdds_AwayRunnerSelectionId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(1)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign MarketTemplateType" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MarketTemplateType")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Classic</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <If Condition="[jsonResultItaly.Contains(&quot;eventTypeId&quot;)]" DisplayName="If the Italian request returned smth" sap:VirtualizedContainerService.HintSize="716.8,770.4" sap2010:WorkflowViewState.IdRef="If_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Build dictionary for Match Odds Italy" DisplayName="For Each attachments exchange market - ITALY" sap:VirtualizedContainerService.HintSize="339.2,611.2" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[jObjectResponseItaly(&quot;attachments&quot;)(&quot;markets&quot;).Children()]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="njl:JToken">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="njl:JToken" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,445.6" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:DateTime" Name="marketTimeV" />
                      <Variable x:TypeArguments="x:String" Name="runnersTest" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[Not item.First(&quot;marketName&quot;).ToString.tolower.Equals(&quot;match odds&quot;) OrElse&#xA;Not item.First(&quot;marketType&quot;).ToString.tolower.Equals(&quot;match_odds&quot;)]" DisplayName="If not match betting" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_4" />
                      </If.Then>
                    </If>
                    <Assign DisplayName="Assign Italian Market ID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MatchOddsItaly_MarketId")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item.First("marketId").ToString.Split("."c)(1)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Italian MatchOdds_HomeRunnerSelectionID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MatchOddsItaly_HomeRunnerSelectionID")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item.first("runners")(0)("selectionId").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Italian MatchOdds_AwayRunnerSelectionID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MatchOddsItaly_AwayRunnerSelectionId")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item.first("runners")(1)("selectionId").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </If.Then>
          <If.Else>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[&quot;This EventId, &quot;+id.ToString+&quot; does not have an italian market!&quot;]" />
          </If.Else>
        </If>
        <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Build dictionary for Set 1 winner" DisplayName="For Each attachments exchange market - SET 1" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[jObjectResponse(&quot;attachments&quot;)(&quot;markets&quot;).Children()]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="njl:JToken">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="njl:JToken" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,645.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:DateTime" Name="marketTimeV" />
                  <Variable x:TypeArguments="x:String" Name="runnersTest" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[not item.First(&quot;marketName&quot;).ToString.tolower.Equals(&quot;set 1 winner&quot;)]" DisplayName="If not match betting" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_5" />
                  </If.Then>
                </If>
                <Assign DisplayName="Assign Market ID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set1Winner_MarketId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.First("marketId").ToString.Split("."c)(1)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Set1Winner_HomeRunnerName" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set1Winner_HomeRunnerName")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(0)("runnerName").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Set1Winner_HomeRunnerSelectionID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set1Winner_HomeRunnerSelectionId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(0)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Set1Winner_AwayRunnerName" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set1Winner_AwayRunnerName")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(1)("runnerName").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Set1Winner_AwayRunnerSelectionID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set1Winner_AwayRunnerSelectionId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(1)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Build dictionary for Set 2 winner" DisplayName="For Each attachments exchange market - SET 2" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[jObjectResponse(&quot;attachments&quot;)(&quot;markets&quot;).Children()]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="njl:JToken">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="njl:JToken" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,645.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:DateTime" Name="marketTimeV" />
                  <Variable x:TypeArguments="x:String" Name="runnersTest" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[not item.First(&quot;marketName&quot;).ToString.tolower.Equals(&quot;set 2 winner&quot;)]" DisplayName="If not match betting" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_6" />
                  </If.Then>
                </If>
                <Assign DisplayName="Assign Market ID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set2Winner_MarketId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.First("marketId").ToString.Split("."c)(1)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Set2Winner_HomeRunnerName" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set2Winner_HomeRunnerName")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(0)("runnerName").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Set2Winner_HomeRunnerSelectionID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set2Winner_HomeRunnerSelectionId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(0)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Set2Winner_AwayRunnerName" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set2Winner_AwayRunnerName")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(1)("runnerName").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Set2Winner_AwayRunnerSelectionID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("Set2Winner_AwayRunnerSelectionId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(1)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Build dictionary for Set Betting" DisplayName="For Each attachments exchange market - SET BETTING" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[jObjectResponse(&quot;attachments&quot;)(&quot;markets&quot;).Children()]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="njl:JToken">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="njl:JToken" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,745.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:DateTime" Name="marketTimeV" />
                  <Variable x:TypeArguments="x:String" Name="runnersTest" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[not item.First(&quot;marketName&quot;).ToString.tolower.Equals(&quot;set betting&quot;)]" DisplayName="If not match betting" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:Continue sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Continue_7" />
                  </If.Then>
                </If>
                <Assign DisplayName="Assign Market ID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("SetBetting_MarketId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.First("marketId").ToString.Split("."c)(1)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign SetBetting_Home2-0 Selection ID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("SetBetting_Home2-0SelectionId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(0)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign SetBetting_Home2-1 Selection ID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("SetBetting_Home2-1SelectionID")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(1)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign SetBetting_Away2-0 Selection ID" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("SetBetting_Away2-0SelectionId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(2)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign SetBetting_Away2-1SelectionId" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("SetBetting_Away2-1SelectionId")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.first("runners")(3)("selectionId").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign MarketTemplateType" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dictionary_ITFeventInfo("MarketTemplateType")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Extra</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
      </Sequence>
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="384,289.6" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[dictionary_ITFeventInfo]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="271.2,155.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[item.ToString]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
  </Sequence>
</Activity>